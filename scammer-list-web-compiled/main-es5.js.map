{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/services/main.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","text","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MainComponent","service","formBuilder","form","group","name","required","minLength","message","get","errors","alert","target","document","getElementById","options","typeColor","typeSpeed","writer","type","rest","removeCursor","start","getResult","subscribe","next","response","clear","setTimeout","setResponse","score","Score","Scammer","nameText","Name","messageText","value","fetchResult","MainService","http","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit {\n  text = '.';\n  ngOnInit() {\n  }\n\n}\n","<!-- <div id=\"lol\"></div> -->\n<app-header></app-header>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Typewriter from 't-writer.js';\nimport { MainService } from '../services/main.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ServerResponse } from './response';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.sass']\n})\nexport class MainComponent implements OnInit {\n\n  form: FormGroup;\n  response: ServerResponse;\n\n  nameText: string;\n  messageText: string;\n\n  constructor(private service: MainService, private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      name: ['', [\n        Validators.required,\n        Validators.minLength(2)\n      ]],\n      message: ['', [\n        Validators.required,\n        Validators.minLength(2)\n      ]]\n    })\n  }\n\n  get name() {\n    return this.form.get('name').value\n  }\n\n  get message() {\n    return this.form.get('message').value\n  }\n\n  fetchResult() {\n    if (this.form.get('name').errors || this.form.get('message').errors) {\n      alert(\"Please check your input\")\n    } else {\n      const target = document.getElementById('loading')\n      const options = {\n        typeColor: '#40f029',\n        typeSpeed: 47,\n      }\n      const writer = new Typewriter(target, options)\n      writer.type('> Connecting....').rest(1000).removeCursor().start();\n      return this.service.getResult(this.name, this.message).subscribe(next => {\n        this.response = next\n        writer.clear()\n        writer.type('> Connected to server').rest(4000).start()\n        writer.clear()\n        setTimeout(() => {this.setResponse(this.response)}, 500)\n      })\n    }\n  }\n\n  setResponse(response: ServerResponse) {\n    const score: number = +response.Score\n    if(response.Scammer === false){\n      this.nameText = `> The name \"${response.Name}\" is not in our scam/spam database`\n    } else {\n      this.nameText = `> \"${response.Name}\" is a scammer/spammer !`\n    }\n\n    if(score <= 5) {\n      this.messageText = `> The message provided dosen't look like spam`\n    } else {\n      this.messageText = `> The message looks like a spam/scam message !`\n    }\n  }\n\n}","<section class=\"columns\">\n    <div class=\"banner column\">\n        <div class=\"heading tm\">\n            Scammer <br> List\n        </div>\n        <p class=\"text\">\n            Scammer List a service which filters spam profiles, websites, and analyzes message for spamming content using it's database of spam content and machine learning.\n            <br><br>\n            <span>Developed as a project of E-Raksha, with ❤️ in India</span>\n        </p>\n    </div>\n    <div class=\"graphics column\">\n        <img src=\"../../assets/map.svg\">\n    </div>\n</section>\n\n<main class=\"columns is-two-thirds-tablet\">\n    <div class=\"form column\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"fetchResult()\">\n            <input formControlName=\"name\" class=\"input is-medium\" type=\"text\" placeholder=\"Name\" required>\n            <textarea formControlName=\"message\" class=\"textarea\" placeholder=\"message\" required></textarea>\n            <br>\n            <button type=\"submit\" class=\"button is-dark is-medium\">Submit</button>\n        </form>\n    </div>\n    <div class=\"result ubuntu column\">\n        <strong>> Fill in the form to see the output here</strong>\n        <br>\n        <strong id=\"loading\"></strong>\n        <br>\n\n        <strong *ngIf=\"response\">> Scam weightage: {{response.Score}}</strong>\n        <br>\n        <strong *ngIf=\"response\">> Website: {{response.Website}}</strong>\n        <br>\n        <strong *ngIf=\"nameText\">{{ nameText }}</strong><br>\n        <strong *ngIf=\"messageText\">{{ messageText }}</strong>\n    </div>\n</main>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private http: HttpClient\n    ) { }\n\n  getResult(name, message){\n    return this.http.get(`http://54.162.146.101/api.php?name=${name}&message=${message}`)\n  }\n}\n\n// http://54.162.146.101/api.php?name=john&message=hello\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}